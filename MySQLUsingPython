
# Import the required modules
import pymysql
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Connect to the database
conn = pymysql.connect(
    host='localhost',
    user='your-user-here',
    password='your-password-here',
    database='classicmodels'
)

# Define query
query = """
    SELECT officeCode, COUNT(*) AS num_employees
    FROM employees
    GROUP BY officeCode
"""

# Load data into DataFrame
df = pd.read_sql(query, conn)
conn.close()

# Plot
plt.figure(figsize=(8, 5))
plt.bar(df['officeCode'], df['num_employees'], color='skyblue')
plt.title('Number of Employees per Office')
plt.xlabel('Office Code')
plt.ylabel('Number of Employees')
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.tight_layout()
plt.show()



#Top 10 Customers by Total Revenue

# SQL query
query = """
    SELECT 
        c.customerName, 
        ROUND(SUM(od.priceEach * od.quantityOrdered), 2) AS total_revenue
    FROM customers c
    JOIN orders o ON c.customerNumber = o.customerNumber
    JOIN orderdetails od ON o.orderNumber = od.orderNumber
    GROUP BY c.customerName
    ORDER BY total_revenue DESC
    LIMIT 10;
"""

# Load data
df = pd.read_sql(query, conn)
conn.close()

# Plot
plt.figure(figsize=(10, 6))
plt.barh(df['customerName'], df['total_revenue'], color='teal')
plt.gca().invert_yaxis()  # Top = highest
plt.xlabel('Total Revenue ($)')
plt.title('Top 10 Customers by Total Revenue')
plt.grid(axis='x', linestyle='--', alpha=0.7)
plt.tight_layout()
plt.show()


# SQL query to get employee performance by office
query = """
    SELECT 
        e.employeeNumber,
        e.firstName,
        e.lastName,
        o.officeCode,
        SUM(od.priceEach * od.quantityOrdered) AS total_sales,
        COUNT(DISTINCT ord.orderNumber) AS num_orders,
        ROUND(SUM(od.priceEach * od.quantityOrdered) / COUNT(DISTINCT ord.orderNumber), 2) AS avg_order_value
    FROM employees e
    JOIN offices o ON e.officeCode = o.officeCode
    JOIN customers c ON e.employeeNumber = c.salesRepEmployeeNumber
    JOIN orders ord ON c.customerNumber = ord.customerNumber
    JOIN orderdetails od ON ord.orderNumber = od.orderNumber
    JOIN products p ON od.productCode = p.productCode
    GROUP BY e.employeeNumber, e.firstName, e.lastName, o.officeCode
    ORDER BY total_sales DESC
    LIMIT 5;
"""

# Execute query and load into DataFrame
df = pd.read_sql(query, conn)
conn.close()

# Plot employee performance (total sales)
plt.figure(figsize=(10, 6))
sns.barplot(x='total_sales', y='firstName', data=df, palette='viridis')
plt.title('Top 5 Employees by Total Sales')
plt.xlabel('Total Sales ($)')
plt.ylabel('Employee Name')
plt.tight_layout()
plt.show()

# Plot average order value per employee
plt.figure(figsize=(10, 6))
sns.barplot(x='avg_order_value', y='firstName', data=df, palette='coolwarm')
plt.title('Average Order Value by Employee')
plt.xlabel('Average Order Value ($)')
plt.ylabel('Employee Name')
plt.tight_layout()
plt.show()
